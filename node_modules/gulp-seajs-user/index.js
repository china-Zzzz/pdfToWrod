'use strict';
var crypto = require('crypto');
var path = require('path');
var gutil = require('gulp-util');
var through = require('through2');
var fs = require('fs');

function md5(str) {
	return crypto.createHash('md5').update(str).digest('hex');   
}

var plugin = function (options) {
	options = options || {base:'build', configFile:'js/seajs-config.js'};
	return through.obj(function (file, enc, cb) {
		if (file.isNull()) {
			cb(null, file);
			return;
		}

		if (file.isStream()) {
			cb(new gutil.PluginError('gulp-seajs-rev', 'Streaming not supported'));
			return;
		}

		var manifest = JSON.parse(file.contents);
		var jsManifest = [];

		for(var fileName in manifest) {
			if (fileName.endsWith('.js')) {
				jsManifest.push([fileName, manifest[fileName]]);
			}
		}

		var str = '.';

		var file = fileName.substring(0, fileName.indexOf('.'));

		var _file = options.configFile;

		var _arr = _file.split(str);

		_arr[0] = _arr[0] + '-' + file;

		_file = _arr.join(str);

		var seajsConfigPath = path.join(options.base, _file);

		var seajsConfig = fs.readFileSync(seajsConfigPath, 'utf-8');

		var num = seajsConfig.indexOf('../dist/js/') + 11;

		var _num = seajsConfig.lastIndexOf('"');

		filename = seajsConfig.substring(num, _num);

		seajsConfig = seajsConfig.replace(filename, manifest[fileName]);

		fs.writeFileSync(seajsConfigPath, seajsConfig);

		var hash = md5(seajsConfig).slice(0, 8);
		var ext = path.extname(seajsConfigPath);
		var filename = path.basename(seajsConfigPath, ext) + ext;

		fs.writeFileSync(path.join(path.dirname(seajsConfigPath), filename), seajsConfig);

		manifest[_file] = path.join(path.dirname(_file), filename);

		cb(null, file);
	});
};

module.exports = plugin;